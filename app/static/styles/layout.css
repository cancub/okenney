*, ::before, ::after {
  box-sizing: border-box;
}
:root {
  --taille-en-tete: 50px;
  --ombre-Y: 5px;
  --ombre-X-contenu: 10px;
  --glissage-contenu: 200px;
  --temps-transition: 0.3s;
  --espace-commut-ouvert: 67px;
}

/* Rules for sizing the icon. */
.material-icons.md-18 { font-size: 18px; }
.material-icons.md-24 { font-size: 24px; }
.material-icons.md-30 { font-size: 30px; }
.material-icons.md-36 { font-size: 36px; }
.material-icons.md-48 { font-size: 48px; }

/* Rules for using icons as black on a light background. */
.material-icons.md-dark { color: rgba(0, 0, 0, 0.54); }
.material-icons.md-dark.md-inactive { color: rgba(0, 0, 0, 0.15); }

/* Rules for using icons as white on a dark background. */
.material-icons.md-light { color: rgba(255, 255, 255, 1); }
.material-icons.md-light.md-inactive { color: rgba(255, 255, 255, 0.3); }

body {
  position: relative;
  width: 100%;
  margin: auto;
}
header {
  position: fixed;
  width: 100%;
  height: var(--taille-en-tete);
  z-index: 30;
}
header div.recip {
  position: absolute;
}
header div.prem {
  width: 100%;
  height: 100%;
  left: 0px;
  z-index: 30;
  background-color: var(--okenney-orange);
  transition: all var(--temps-transition);
  box-shadow:
    20px 6px 2px -6px rgba(0, 0, 0, 0.35),
    0px 2px 2px 1px rgba(0, 0, 0, 0.3);
}
header div.prem.ouvert {
  left: calc(var(--espace-commut-ouvert) - 100vw);
  box-shadow:
    20px 6px 2px -6px rgba(0, 0, 0, 0.35),
    26px 26px 2px -23px rgba(0, 0, 0, 0.3);
}
header div.prem * {
  position: relative;
}
header div.arr {
  width: 100%;
  height: 100%;
  background-color: var(--okenney-purple-grey);
}
footer {
  position: relative;
  width:100%;
  height: 40px;
  z-index: 10;
  background-color: white;
}

.resize-animation-stopper * {
  animation: none !important;
  transition: none !important;
}

#ArrPlan {
  position: fixed;
  width: 100%;
  height: 100vh;
  background-color: var(--okenney-purple-grey);
}

#Contenu {
  position: relative;
  left: 0px;
  padding-top: calc(var(--taille-en-tete) + 10px);
  background-color: white;
  transition: left var(--temps-transition);
}
#Contenu::before {
  position: fixed;
  height: 100%;
  width: 20px;
  top: 54px;
  right: 0;
  content: "";
  z-index: 10;
  box-shadow: 11px 3px 2px 1px rgba(0, 0, 0, 0.3);
  transition: right var(--temps-transition)
}
#Contenu.ouvert {
  left: calc(-1*var(--glissage-contenu));
  animation: colorRotate 20s linear infinite;
}

#Contenu div[name="bloqueur"] {
  position: absolute;
  height:100%;
  width:100%;
  top: 0px;
  opacity: 0.5;
  background-color: gray;
}
#Contenu.ferme div[name="bloqueur"] {
  display: none;
}

@keyframes colorRotate {
  100% {
    filter: hue-rotate(360deg);
  }
}